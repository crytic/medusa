#!/usr/bin/env bash
set -e

# Define directories and utility functions
BASE_DIR=${XDG_CONFIG_HOME:-$HOME}
MEDUSA_DIR=${MEDUSA_DIR:-"$BASE_DIR/.medusa"}
MEDUSA_BIN_DIR="$MEDUSA_DIR/bin"

need_cmd() {
  if ! command -v "$1" &>/dev/null; then
    echo "need '$1' (command not found)"
    exit 1
  fi
}

say() {
  echo "medusaget: $1"
}

need_cmd go
need_cmd curl
need_cmd pip3

GO_VERSION=$(go version | awk '{print $3}' | tr -d 'go')
if [[ $(echo "$GO_VERSION 1.18" | awk '{print ($1 >= $2)}') -ne 1 ]]; then
  echo "Go version 1.18 or higher is required. Exiting."
  exit 1
fi

if ! pip3 show crytic-compile &> /dev/null; then
  say "Installing crytic-compile"
  pip3 install crytic-compile
fi

if ! command -v solc &> /dev/null && ! command -v hardhat &> /dev/null; then
  echo "Either solc or hardhat is required but neither is installed. Exiting."
  exit 1
fi

mkdir -p $MEDUSA_BIN_DIR

PLATFORM="$(uname -s)"
ARCHITECTURE="$(uname -m)"

case $PLATFORM in
  Linux) PLATFORM="linux" ;;
  Darwin) PLATFORM="mac" ;;
  MINGW*) PLATFORM="win" ;;
  *) say "Unsupported platform"; exit 1 ;;
esac

if [ "$ARCHITECTURE" = "x86_64" ]; then
  ARCHITECTURE="x64"
elif [ "$ARCHITECTURE" = "arm64" ]; then
  ARCHITECTURE="arm64"
else
  echo "unsupported architecture: $ARCHITECTURE"
  exit 1
fi

LATEST_VERSION=$(curl --silent "https://api.github.com/repos/crytic/medusa/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
if [[ -z "$LATEST_VERSION" ]]; then
  say "Couldn't get the latest version. Exiting."
  exit 1
fi

BIN_URL="https://github.com/crytic/medusa/releases/download/$LATEST_VERSION/medusa-$PLATFORM-$ARCHITECTURE.tar.gz"

say "Downloading Medusa..."
TMP_FILE=$(mktemp)
curl -L $BIN_URL -o $TMP_FILE
tar -xzvf $TMP_FILE -C $MEDUSA_BIN_DIR
rm -f $TMP_FILE

PROFILE="$HOME/.bashrc"
case $SHELL in
  */zsh) PROFILE="$HOME/.zshrc" ;;
  */fish) PROFILE="$HOME/.config/fish/config.fish" ;;
esac

if [[ ":$PATH:" != *":${MEDUSA_BIN_DIR}:"* ]]; then
  echo "export PATH=\"\$PATH:$MEDUSA_BIN_DIR\"" >> $PROFILE
fi

say "Medusa installed. Run 'source $PROFILE' or start a new terminal session to use it."
